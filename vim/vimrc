if filereadable(expand("~/.vimrc.bundles"))
    set nocompatible              " be iMproved, required
    set modelines=0

    filetype off                  " required
  source ~/.vimrc.bundles
endif
filetype plugin on

" Colors {{{
syntax enable               " enable syntax processing
" }}}

" Spaces & Tabs {{{
set tabstop=2               " number of visual spaces per TAB
set shiftwidth=2
set softtabstop=2           " number of spaces in tab when editing
set expandtab               " tabs are spaces
set smartindent
set pastetoggle=<F10>
" }}}

" UI Config {{{
set number                  " show line numbers
set cursorline              " highlight current line

" https://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
set clipboard=unnamed       " use system clioboard "

set hidden                  " display errors "
set encoding=utf-8          " change output encoding in terminal "
set scrolloff=10            " lines in view above and under the cursor "
set autoindent
set showmode
set showcmd
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline              " highlight cusro line "
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set undofile
" }}}

" Searching {{{
set incsearch               " search as characters are entered
set hlsearch                " highlight matches
" }}}

" Movement {{{
set mouse=n " enable mouse in normal mode "

" http://vimcasts.org/blog/2013/02/habit-breaking-habit-making/
" Disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Disable unmark after indentation
vnoremap > >gv
vnoremap < <gv

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" move among buffers with CTRL
"nnoremap <C-j> :bnext<CR>
"noremap <C-k> :bprev<CR>


" Leader Shortcuts {{{
let mapleader=","           " leader is comma

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
nmap <silent> <leader>n :set relativenumber!<CR>
" }}}


" Backups {{{
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//
" }}}

" PLUGINS {{{

" Unimpaired {{{
" http://vimcasts.org/episodes/bubbling-text/
" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]
" }}}

" Gundo {{{
nnoremap <leader>u :GundoToggle<CR>
" }}}

" Nerdtree {{{
nnoremap <C-n> :NERDTreeToggle<CR>
" }}}

" Tagbar {{{
nmap <leader>t  :TagbarToggle<CR>
" }}}

" Solarized theme && Airline {{{
set background=dark
colorscheme solarized
let g:airline_theme='solarized'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
" }}}

" Ack/Ag & CtrlP {{{
" https://robots.thoughtbot.com/faster-grepping-in-vim
if executable('ag')
    " Use ag over grep "
    set grepprg=ag\ --nogroup\ --nocolor\ --column

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore "
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

    " ag is fast enough that CtrlP doesn't need to cache "
    let g:ctrlp_use_caching = 0

    let g:ctrlp_match_window = 'bottom,order:ttb'
    let g:ctrlp_switch_buffer = 0
    let g:ctrlp_working_path_mode = 0
    let g:ctrlp_follow_symlinks = 1
    let g:ctrlp_max_files = 0
    let g:ctrlp_max_depth = 40
    let g:ctrlp_max_height = 40

    " bind K to grep word under cursor
    nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

    " bind \ (backward slash) to grep shortcut "
    command! -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
    nnoremap \ :Ag<SPACE>
endif
" }}}

" Syntastic {{{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" }}}

" }}}
