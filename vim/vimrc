if filereadable(expand("~/.vimrc.bundles"))
    set nocompatible              " be iMproved, required
    set modelines=0

    filetype off                  " required
  source ~/.vimrc.bundles
endif

" Colors {{{
syntax enable               " enable syntax processing

" Add solarized theme
syntax enable
set background=dark
colorscheme solarized

" Set solarized theme for airline plugin
let g:airline_theme='solarized'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
" }}}

" Spaces & Tabs {{{
set tabstop=2               " number of visual spaces per TAB
set shiftwidth=2
set softtabstop=2           " number of spaces in tab when editing
set expandtab               " tabs are spaces
" }}}

" UI Config {{{
set number                  " show line numbers
set cursorline              " highlight current line
set clipboard=unnamed       " use system clioboard "
set hidden                  " display errors "
set encoding=utf-8          " change output encoding in terminal "
set scrolloff=10            " lines in view above and under the cursor "
set autoindent
set showmode
set showcmd
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline              " highlight cusro line "
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set undofile
" }}}

" Searching {{{
set incsearch               " search as characters are entered
set hlsearch                " highlight matches
" }}}

" Movement {{{
set mouse=n " enable mouse in normal mode "

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" move among buffers with CTRL
nnoremap <C-j> :bnext<CR>
nnoremap <C-k> :bprev<CR>

" toggle nerdtree
nnoremap <C-n> :NERDTreeToggle<CR>

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" bind Tab and Shift-Tab to cycle through buffers
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>i"
" }}}

" Leader Shortcuts {{{
let mapleader=","           " leader is comma

" toggle gundo
nnoremap <leader>u :GundoToggle<CR>

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

nmap <silent> <leader>n :set relativenumber!<CR>
" }}}

" Ack/Ag & CtrlP {{{
if executable('ag')
    " Use ag over grep "
    set grepprg=ag\ --nogroup\ --nocolor\ --column

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore "
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  
    " ag is fast enough that CtrlP doesn't need to cache "
    let g:ctrlp_use_caching = 0
 
    let g:ctrlp_match_window = 'bottom,order:ttb'
    let g:ctrlp_switch_buffer = 0
    let g:ctrlp_working_path_mode = 0
    let g:ctrlp_follow_symlinks = 1
    let g:ctrlp_max_files = 0
    let g:ctrlp_max_depth = 40
    let g:ctrlp_max_height = 40

    " bind \ (backward slash) to grep shortcut "
    command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
    nnoremap \ :Ag<SPACE>
endif
" }}}

" Backups {{{
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
" }}}
