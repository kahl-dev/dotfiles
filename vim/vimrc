" Default settings {{{
" Features {{{

filetype indent plugin on         " load filetype-specific indent files"
syntax on                         " Enable syntax highlighting

" }}}
" Must have options {{{

" One such option is the 'hidden' option, which allows you to re-use the same
" window and switch from an unsaved buffer without saving it first. Also allows
" you to keep an undo history for multiple files when re-using the same window
" in this way. Note that using persistent undo also lets you undo in multiple
" files even in the same window, but is less efficient and is actually designed
" for keeping undo history after closing Vim entirely. Vim will complain if you
" try to quit without saving, and swap files will keep you safe if your computer
" crashes.
set hidden

set encoding=utf-8                " set encoding to utf8
set wildmenu                      " better command-line completion
set wildmode=longest,list:full    " Auto-completion menu
set showcmd                       " show partial commands in last screen line
set hlsearch                      " highlight search
set splitbelow                    " on window split put below
set splitright                    " on window split put on right sote

" }}}
" Usability options {{{

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Highlight 80 columns background
if exists('+colorcolumn')
  let &colorcolumn=join(range(81,999),",")" highlight column > 80
  highlight ColorColumn ctermbg=235 guibg=#2c2d27
  let &colorcolumn="80,".join(range(120,999),",")
endif

" Enable use of the mouse for all modes
if has('mouse_sgr')
  set ttymouse=sgr
endif
set mouse=a

" yank to clipboard
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif

set lazyredraw                    " redraw only when we need to
set autoread                      " reload files changed outside vim
set ignorecase                    " case insensitive search
set smartcase                     " insensitive search except using capital once
set autoindent                    " copy indent of current for new line
set ruler                         " show cursor on bottom
set laststatus=2                  " always display status line
set visualbell                    " visual bell instead of beeping
set t_vb=                         " reset terminal code for visual bell
set t_RV=                         " fix first line on load // bugfix for hyper
set number                        " show line numbers
set relativenumber                " show relative numbers
set cursorline                    " highlight cursor line
set scrolloff=10                  " min numbers above and below cursor
set cmdheight=2                   " command window height to 2
set pastetoggle=<F10>             " toggle paste mode
autocmd VimResized * wincmd =     " Adjust vim size on resize

set directory^=$HOME/.vim/tmp//

" }}}
" Indentation options {{{

set tabstop=2                     " number of visual spaces per TAB
set shiftwidth=2                  " number of space characters inserted for indentation
set softtabstop=2                 " number of spaces in tab when editing
set expandtab                     " tabs are spaces


" }}}
" Mappings {{{

" http://vimcasts.org/episodes/bubbling-text/
" Bubble single lines
" Dependend plugin unimpaired
nnoremap <C-Up> ddkP
nnoremap <C-Down> ddp
" Bubble multiple lines
vnoremap <C-Up> xkP`[V`]
vnoremap <C-Down> xp`[V`]

" Disable arrow keys - muscle memory hjkl
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" move vertically by visual line
nnoremap <expr> j v:count ? (v:count > 5 ? "m'" . v:count : '') . 'j' : 'gj'
nnoremap <expr> k v:count ? (v:count > 5 ? "m'" . v:count : '') . 'k' : 'gk'

" toggle folding
nnoremap <tab> za

" jk | Escaping!
inoremap jk <Esc>
xnoremap jk <Esc>
cnoremap jk <C-c>

" Movement in insert mode
inoremap <C-h> <C-o>h
inoremap <C-l> <C-o>a
inoremap <C-j> <C-o>j
inoremap <C-k> <C-o>k
inoremap <C-^> <C-o><C-^>

nnoremap <leader>h :noh<CR>

" vims . repeat with visual mode
xnoremap . :norm.<CR>

" highlight last inserted text
nnoremap gV `[v`]

" set leader key
let mapleader=","

" toggle to next buffer
nnoremap <leader><tab> :bnext<CR>

" edit vimrc/zshrc and load vimrc bindings
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>ez :vsp ~/.zshrc<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" }}}
" }}}
" {{{ Plugin Manager (vim-plug)
if filereadable(expand("~/.vim/vim-plugs.vim"))
  source ~/.vim/vim-plugs.vim
endif
" }}}
" Load settings {{{
if filereadable(expand("~/.vim/settings.vim"))
  source ~/.vim/settings.vim
endif
" }}}
