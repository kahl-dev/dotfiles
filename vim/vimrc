if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Colors {{{
syntax enable               " enable syntax processing

" Add solarized theme
syntax enable
set background=dark
colorscheme solarized

" Set solarized theme for airline plugin
let g:airline_theme='solarized'
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
" }}}

" Spaces & Tabs {{{
set tabstop=4               " number of visual spaces per TAB
set softtabstop=4           " number of spaces in tab when editing
set expandtab               " tabs are spaces
" }}}

" UI Config {{{
set number                  " show line numbers
set cursorline              " highlight current line
" }}}

" Searching {{{
set incsearch               " search as characters are entered
set hlsearch                " highlight matches
" }}}

" Movement {{{
" move vertically by visual line
nnoremap j gj
nnoremap k gk

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" move among buffers with CTRL
nnoremap <C-j> :bnext<CR>
nnoremap <C-k> :bprev<CR>

" toggle nerdtree
nnoremap <C-n> :NERDTreeToggle<CR>

" }}}

" Leader Shortcuts {{{
let mapleader="<"           " leader is comma

" toggle gundo
nnoremap <leader>u :GundoToggle<CR>

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
" }}}

" CtrlP settings {{{
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
" }}}

" Backups {{{
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
" }}}
