// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
    // 1. Remote SSH connections
    "ssh_connections": [
    ],

    // 2. Extensions to auto-install when opening a project
    "auto_install_extensions": {
        "html": true,
        "catppuccin": true
    },

    // 3. AI-powered editing & predictions
    "edit_predictions": {
        "disabled_globs": [
            "**/.git",
            "**/.svn",
            "**/.hg",
            "**/CVS",
            "**/.DS_Store",
            "**/Thumbs.db",
            "**/.classpath",
            "**/.settings",
            "**/.vscode",
            "**/.idea",
            "**/node_modules",
            "**/.serverless",
            "**/build",
            "**/dist"
        ],
        "mode": "eager",
        "enabled_in_text_threads": true
    },
    "features": {
        "edit_prediction_provider": "copilot"
    },

    // 4. UI & Appearance
    "icon_theme": "Catppuccin Mocha",
    "theme": {
        "mode": "dark",
        "light": "One Light",
        "dark": "Catppuccin Mocha"
    },
    "ui_font_size": 16,
    "ui_font_family": "JetBrainsMono Nerd Font Mono",
    "buffer_font_size": null,
    "buffer_font_family": "JetBrainsMono Nerd Font Mono",
    "tab_bar": {
        "show": true,
        "show_nav_history_buttons": false
    },
    "tabs": {
        "file_icons": true,
        "git_status": true
    },
    "notification_panel": {
        "enabled": false,
        "button": false
    },
    "toolbar": {
        "title": false,
        "quick_actions": false
    },
    "centered_layout": {
        // Zen mode padding
        "left_padding": 0.15,
        "right_padding": 0.15
    },

    // 5. Editor behavior
    "vim_mode": true,
    "relative_line_numbers": true,
    "scrollbar": {
        "show": "never"
    },
    "indent_guides": {
        "enabled": true,
        "coloring": "indent_aware"
    },
    "show_completions_on_input": true,
    "show_edit_predictions": true,
    "autosave": "on_focus_change",
    "preferred_line_length": 120,
    "tab_size": 4,

    // 6. Search & file scanning
    "search": {
        "whole_word": false,
        "case_sensitive": false,
        "include_ignored": false,
        "regex": false
    },
    "file_types": {
        "Dockerfile": ["Dockerfile", "Dockerfile.*"],
        "JSON": ["json", "jsonc", "*.code-snippets"]
    },
    "file_scan_exclusions": [
        "**/.git",
        "**/.svn",
        "**/.hg",
        "**/CVS",
        "**/.DS_Store",
        "**/Thumbs.db",
        "**/.classpath",
        "**/.settings",
        "**/.vscode",
        "**/.idea",
        "**/node_modules",
        "**/.serverless",
        "**/build",
        "**/dist",
        "**/coverage",
        "**/.venv"
    ],
    "file_scan_inclusions": [".env"],

    // 7. Panels configuration
    "project_panel": {
        "button": true,
        "default_width": 300,
        "dock": "left",
        "scrollbar": { "show": "never" }
    },
    "outline_panel": {
        "dock": "right",
        "button": true
    },

    // 8. Integrated terminal settings
    "terminal": {
        "env": { "EDITOR": "zed --wait" },
        "font_size": 16,
        "font_family": "JetBrainsMono Nerd Font Mono",
        "detect_venv": {
            "on": {
                "directories": [".venv", "venv"],
                "activate_script": "default"
            }
        },
        "button": true
    },

    // 9. Language servers & formatting
    // "lsp": {
    //     "eslint": {
    //         "settings": {
    //             "codeActionOnSave": {
    //                 "rules": ["import/order"]
    //             }
    //         }
    //     }
    // },

    "language_servers": ["vtsls", "typescript-language-server", "eslint"],
    "language_server_options": {
        "vtsls": {
            "language_ids": ["typescript", "javascript", "typescriptreact", "javascriptreact"]
        },
        "typescript-language-server": {
            "language_ids": ["typescript", "javascript", "typescriptreact", "javascriptreact"],
            "initialization_options": {
                "preferences": {
                    "includeInlayParameterNameHints": "all",
                    "includeInlayParameterNameHintsWhenArgumentMatchesName": true,
                    "includeInlayFunctionParameterTypeHints": true,
                    "includeInlayVariableTypeHints": true,
                    "includeInlayVariableTypeHintsWhenTypeMatchesName": false,
                    "includeInlayPropertyDeclarationTypeHints": true,
                    "includeInlayFunctionLikeReturnTypeHints": true,
                    "includeInlayEnumMemberValueHints": true
                }
            }
        },
        "eslint": {
            "language_ids": ["typescript", "javascript", "typescriptreact", "javascriptreact"],
            "initialization_options": {
                "run_formatter": true
            }
        }
    },
    "languages": {
        // "TypeScript": {
        //     "formatter": "prettier",
        //     "code_actions_on_format": {
        //         "source.fixAll.eslint": true
        //     },
        //     "format_on_save": {
        //         "external": {
        //             "command": "prettier",
        //             "arguments": ["--stdin-filepath", "{buffer_path}"]
        //         }
        //     }
        // },
        "TSX": {
            // "formatter": "prettier",
            "code_actions_on_format": {
                "source.fixAll.eslint": true
            },
            "format_on_save": "on"
        },
        "JavaScript": {
            // "formatter": "prettier",
            "code_actions_on_format": {
                "source.fixAll.eslint": true
            },
            "format_on_save": "on"
        },
        "PHP": {
            "formatter": {
                "external": {
                    "command": "php-cs-fixer",
                    "arguments": ["fix", "--using-cache=no", "--diff", "--rules=@PSR12", "-"]
                }
            },
            "format_on_save": "on"
        }
    },
    "formatter": {
        "code_actions": {
            "source.fixAll.eslint": true
        }
    },

    // 10. AI assistant (agent) configuration
    "agent": {
        "default_profile": "claude-sonnet-4",
        "profiles": {
            "claude-sonnet-4": {
                "name": "Claude Sonnet 4",
                "tools": {
                    "open": true,
                    "copy_path": true,
                    "create_directory": true,
                    "delete_path": true,
                    "diagnostics": true,
                    "edit_file": true,
                    "fetch": true,
                    "list_directory": true,
                    "move_path": true,
                    "now": true,
                    "find_path": true,
                    "read_file": true,
                    "grep": true,
                    "terminal": true,
                    "thinking": true,
                    "web_search": true
                },
                "enable_all_context_servers": true,
                "context_servers": {
                    "mcp-server-supabase": {
                        "tools": {
                            "get_cost": true,
                            "get_anon_key": true,
                            "get_advisors": true,
                            "generate_typescript_types": true,
                            "execute_sql": true,
                            "deploy_edge_function": true,
                            "delete_branch": true,
                            "create_project": true,
                            "create_branch": true,
                            "get_logs": true,
                            "get_organization": true,
                            "list_branches": true,
                            "get_project_url": true,
                            "get_project": true,
                            "list_edge_functions": true,
                            "list_extensions": true,
                            "list_projects": true,
                            "list_organizations": true,
                            "list_migrations": true,
                            "search_docs": true,
                            "restore_project": true,
                            "reset_branch": true,
                            "rebase_branch": true,
                            "pause_project": true,
                            "merge_branch": true,
                            "list_tables": true
                        }
                    },
                    "postgres-context-server": {
                        "tools": {
                            "query": false,
                            "pg-schema": false
                        }
                    },
                    // "nuxt-mcp": {
                    //     "settings": {},
                    //     // "source": "custom",
                    //     "command": {
                    //         "path": "npx",
                    //         "args": ["-y", "nuxt-mcp"],
                    //         "env": {}
                    //     }
                    // },
                    // "nuxt-ui-mcp": {
                    //     "source": "url",
                    //     "url": "http://localhost:3005/"
                    // }
                }
            }
        },
        "play_sound_when_agent_done": true,
        "always_allow_tool_actions": true,
        "default_model": {
            "provider": "openai",
            "model": "gpt-5"
        },
    },

    // 11. Telemetry & metrics
    "telemetry": {
        "diagnostics": true,
        "metrics": true
    },

    // 12. Connectivity defaults
    "projects_online_by_default": false
}
