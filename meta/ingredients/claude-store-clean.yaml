- defaults:
    link:
      relink: true
      create: true
    shell:
      quiet: false
      stderr: true

- clean: []

- link: {}

- shell:
    - description: "Clone claude-store repository"
      command: |
        if [ ! -d "$HOME/.claude.store" ]; then
          echo "Cloning claude-store repository..."
          git clone git@github.com:kahl-dev/.claude.store.git "$HOME/.claude.store"
        else
          echo "Claude-store repository already exists"
          cd "$HOME/.claude.store"
          git pull origin main
        fi

    - description: "Create symlink for entire claude directory"
      command: |
        # Remove existing ~/.claude directory/symlink completely
        rm -rf "$HOME/.claude"
        
        # Create symlink to entire user-level directory
        ln -sf "$HOME/.claude.store/user-level" "$HOME/.claude"
        
        echo "Created symlink: ~/.claude -> ~/.claude.store/user-level"

    - description: "Update hostname in configuration"
      command: |
        # Update hostname in existing config.json
        cd "$HOME/.claude.store"
        if [ -f "config.json" ]; then
          jq --arg hostname "$(hostname)" '.hostname = $hostname' config.json > config.json.tmp
          mv config.json.tmp config.json
          echo "Updated hostname in configuration to $(hostname)"
        fi

    - description: "Add claude alias to shell configuration"
      command: |
        # Detect shell and add alias appropriately
        SHELL_CONFIG=""
        if [ -n "$ZSH_VERSION" ] || [ "$SHELL" = "/bin/zsh" ] || [ "$SHELL" = "/usr/bin/zsh" ]; then
          SHELL_CONFIG="$HOME/.zshrc"
        elif [ -n "$BASH_VERSION" ] || [ "$SHELL" = "/bin/bash" ] || [ "$SHELL" = "/usr/bin/bash" ]; then
          SHELL_CONFIG="$HOME/.bashrc"
        else
          SHELL_CONFIG="$HOME/.profile"
        fi
        
        # Add alias if not already present
        if [ -f "$SHELL_CONFIG" ] && ! grep -q "alias claude=" "$SHELL_CONFIG" 2>/dev/null; then
          echo "" >> "$SHELL_CONFIG"
          echo "# Claude Storage System alias" >> "$SHELL_CONFIG"
          echo "alias claude='$HOME/.claude.store/bin/claude-wrapper'" >> "$SHELL_CONFIG"
          echo "Claude alias added to $SHELL_CONFIG"
        elif [ ! -f "$SHELL_CONFIG" ]; then
          echo "# Claude Storage System alias" > "$SHELL_CONFIG"
          echo "alias claude='$HOME/.claude.store/bin/claude-wrapper'" >> "$SHELL_CONFIG"
          echo "Created $SHELL_CONFIG with claude alias"
        else
          echo "Claude alias already exists in $SHELL_CONFIG"
        fi

    - description: "Display installation summary"
      command: |
        echo ""
        echo "üéâ Claude Storage System installed successfully!"
        echo ""
        echo "üìÅ Location: $HOME/.claude.store"
        echo "üîó Symlink: ~/.claude -> ~/.claude.store/user-level"
        echo "‚öôÔ∏è  Mode: $(jq -r '.mode' $HOME/.claude.store/config.json)"
        echo "üñ•Ô∏è  Hostname: $(jq -r '.hostname' $HOME/.claude.store/config.json)"
        echo ""
        echo "Next steps:"
        echo "1. Restart your shell or run: source ~/.zshrc (or ~/.bashrc)"
        echo "2. Use 'claude' command as normal - files will be managed automatically"
        echo "3. Use 'claude-wrapper status' to check current status"
        echo "4. Use 'claude-wrapper toggle' to change project management behavior"
        echo ""