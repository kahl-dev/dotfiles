# ############################################################### #
# THE FOLLOWING SECTION CONTAIN SIMPLE MAPPINGS DEMONSTRATING HOW #
# TO INTERACT WITH THE YABAI WM. THESE ARE SUPPOSED TO BE USED AS #
# A REFERENCE ONLY, WHEN MAKING YOUR OWN CONFIGURATION..          #
# ############################################################### #


# opens iTerm2
# alt - return : "${HOME}"/.config/yabai/scripts/open_iterm2.sh

# Show system statistics
# fn + lalt - 1 : "${HOME}"/.config/yabai/scripts/show_cpu.sh
# fn + lalt - 2 : "${HOME}"/.config/yabai/scripts/show_mem.sh
# fn + lalt - 3 : "${HOME}"/.config/yabai/scripts/show_bat.sh
# fn + lalt - 4 : "${HOME}"/.config/yabai/scripts/show_disk.sh
# fn + lalt - 5 : "${HOME}"/.config/yabai/scripts/show_song.sh

# Focus window (Vim-like bindings)
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Swap managed window
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move focus container to workspace
shift + alt - m : yabai -m window --space last && yabai -m space --focus last
shift + alt - p : yabai -m window --space prev && yabai -m space --focus prev
shift + alt - n : yabai -m window --space next && yabai -m space --focus next
shift + alt - 1 : $DOTFILES/.config/yabai/move_to_space.sh 1
shift + alt - 2 : $DOTFILES/.config/yabai/move_to_space.sh 2
shift + alt - 3 : $DOTFILES/.config/yabai/move_to_space.sh 3
shift + alt - 4 : $DOTFILES/.config/yabai/move_to_space.sh 4
shift + alt - 5 : $DOTFILES/.config/yabai/move_to_space.sh 5
shift + alt - 6 : $DOTFILES/.config/yabai/move_to_space.sh 6
shift + alt - 7 : $DOTFILES/.config/yabai/move_to_space.sh 7
shift + alt - 8 : $DOTFILES/.config/yabai/move_to_space.sh 8

cmd + alt - n : yabai -m space --create
cmd + alt - x : yabai -m space --destroy

# Resize windows
ctrl + alt - h : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
ctrl + alt - j : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
ctrl + alt - k : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
ctrl + alt - l : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# Equalize size of windows
ctrl + alt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace
ctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 270
shift + alt - r : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + ctrl + alt - h : yabai -m window --insert west
shift + ctrl + alt - j : yabai -m window --insert south
shift + ctrl + alt - k : yabai -m window --insert north
shift + ctrl + alt - l : yabai -m window --insert east

# Float / unfloat window and center on screen
alt - t : yabai -m window --toggle float; yabai -m window --grid 4:4:1:1:2:2

# Restart Yabai
shift + ctrl + alt - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# Make window native fullscreen
alt - f         : yabai -m window --toggle zoom-fullscreen
shift + alt - f : yabai -m window --toggle native-fullscreen

# # Focus monitor
# ctrl + alt - n : yabai -m display --focus next
# ctrl + alt - p : yabai -m display --focus prev
# ctrl + alt - right : yabai -m display --focus next
# ctrl + alt - left : yabai -m display --focus prev
# ctrl + alt - 1 : yabai -m display --focus 1
# ctrl + alt - 2 : yabai -m display --focus 2
# ctrl + alt - 3 : yabai -m display --focus 3
# ctrl + alt - 4 : yabai -m display --focus 4
#
# # Send window to monitor and follow focus
# shift + alt - n : yabai -m window --display next; yabai -m display --focus next
# shift + alt - p : yabai -m window --display prev; yabai -m display --focus prev
# shift + alt - right : yabai -m window --display next; yabai -m display --focus next
# shift + alt - left : yabai -m window --display prev; yabai -m display --focus prev
#
# # Focus desktop
alt - tab : yabai -m space --focus recent
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8
alt - 9 : yabai -m space --focus 9
#
# # Move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20
#
# # Toggle window zoom parent
# alt - d : yabai -m window --toggle zoom-parent

# Toggle window split type
# alt - - : yabai -m window --toggle split

# Toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# Toggle padding and gap
alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# # Create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
shift + alt - n : yabai -m space --create && \
                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                  yabai -m window --space "${index}" && \
                  yabai -m space --focus "${index}"
#
# # Quickly restart the Yabai launch agent
ctrl + alt + cmd - r : yabai --restart-service; skhd --reload

# Open WezTerm app
cmd - return : osascript -e 'tell application "WezTerm" to activate'

# # # Open Arc Browser
# # cmd + shift - b : osascript -e 'tell application "Arc" to activate'
# #
# # # Open Messages
# # cmd + shift - m : osascript -e 'tell application "Messages" to activate'
# #
# # # Open Microsoft Teams
# # cmd + shift - t : osascript -e 'tell application "Microsoft Teams" to activate'
# #
# # # Open Toggl
# # cmd + shift - g : osascript -e 'tell application "Toggl Track" to activate'
# #
# # # Open Calendar
# # cmd + shift - c : osascript -e 'tell application "Calendar" to activate'
