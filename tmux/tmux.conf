# vim:fileencoding=utf-8:foldmethod=marker
# idol: https://github.com/samoshkin/tmux-config

source-file ~/.dotfiles/tmux/.tmux.reset.conf

# General settings {{{
# =============================================================================

# Terminal settings
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

setw -g xterm-keys on
set -s escape-time 10         # faster command sequences
set -sg repeat-time 600       # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on      # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 50000    # boost history
set -g renumber-windows on    # renumber window after close
set -g prefix C-s             # change prefix
set -g mouse on               # Enable mouse support

# Bell and notification settings
set -g bell-action any
set -g visual-bell off

# }}}

# Display {{{
# =============================================================================

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g automatic-rename-format '#{b:pane_current_path}'

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

set -g default-command "ZDOTDIR=$HOME/.dotfiles/zsh zsh"

# }}}

# Floating popup {{{
# =============================================================================


# Cheatsheet popup
bind-key ? run-shell -b "tmux display-popup -d '#{pane_current_path}' -xC -yC -w90% -h90% -E 'bash ~/.dotfiles/tmux/scripts/tmux-cheatsheet.sh'"

# Cheatsheet interactive search
bind-key / run-shell -b "tmux display-popup -d '#{pane_current_path}' -xC -yC -w80% -h40% -E 'bash ~/.dotfiles/tmux/scripts/tmux-cheatsheet-search.sh'"

# Custom unified status bar configuration
source-file ~/.dotfiles/tmux/custom-status.conf

# }}}

# Key bindings {{{
# =============================================================================

# create session
bind C-c new-session

# create new window in current directory
bind c new-window -c "#{pane_current_path}"

# resize panes like vim
bind-key -r Left resize-pane -L 5
bind-key -r Down resize-pane -D 5
bind-key -r Up resize-pane -U 5
bind-key -r Right resize-pane -R 6
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -fv

# Zoom pane
bind z resize-pane -Z

# Kill pane/window/session shortcuts (with immediate save to prevent unwanted restore)
bind x kill-pane \; run-shell "~/.dotfiles/tmux/plugins/tmux-resurrect/scripts/save.sh >/dev/null 2>&1 || true"
bind X kill-window \; run-shell "~/.dotfiles/tmux/plugins/tmux-resurrect/scripts/save.sh >/dev/null 2>&1 || true"
bind Q confirm-before -p "kill-session #S? (y/n)" 'kill-session \; run-shell "~/.dotfiles/tmux/plugins/tmux-resurrect/scripts/save.sh >/dev/null 2>&1 || true"'

# Move windows
#https://superuser.com/questions/343572/how-do-i-reorder-tmux-windows#answer-552493
bind-key -n C-S-Left swap-window -t -1 \;\
  select-window -t -1
bind-key -n C-S-Right swap-window -t +1 \;\
  select-window -t +1

# bind "r" source-file ~/.tmux.conf \; display-message "~/.tmux.conf sourced"
# bind r unbind-key -a \; source-file ~/.tmux/.tmux.reset.conf \; source-file ~/.tmux.conf \; display "Config reloaded"
bind r source-file ~/.dotfiles/tmux/tmux.conf \; display-message "Config reloaded!"

# Source: https://waylonwalker.com/til/tmux-copy-mode-binding/
bind Enter copy-mode
bind -n C-[ copy-mode

# break pane out of window
bind-key B break-pane -d

# put pane back into window
bind-key E command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# open some common tools in new windows
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"
bind-key b new-window -n btop "btop"
bind-key m new-window -n glow -c "#{pane_current_path}" "glow"

# Open project URLs with lit-info (only if li-tools is available)
if-shell '[ -d "$HOME/repos/li-tools" ]' \
    'bind-key U run-shell -b "tmux display-popup -d \"#{pane_current_path}\" -xC -yC -w80% -h60% -E \"bash ~/.dotfiles/tmux/scripts/lit-info-urls.sh \\\"#{pane_current_path}\\\"\""'

# }}}

# Copy mode, scroll and clipboard {{{
# =============================================================================

## Prefer vi style key table
setw -g mode-keys vi

# Disable tmux's built-in clipboard to force all operations through rclip
set -s set-clipboard off

# Set rclip as the global copy command for tmux 3.2+
set -s copy-command 'rclip'

# Use rclip for all clipboard operations - it handles local/remote automatically
# Copy selected text with rclip
unbind-key -T copy-mode-vi v
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode-vi 'Y' send -X copy-line \; send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'rclip'

# Fix problematic vi copy mode bindings that were copying to buffer only
bind -T copy-mode-vi 'C-j' send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode-vi 'A' send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode-vi 'D' send -X copy-pipe-and-cancel 'rclip'

# Copy selection on drag end event using rclip for clipboard integration
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'rclip'

# Fix mouse drag in copy mode - override root binding to always stay in tmux copy mode
bind -T copy-mode-vi MouseDrag1Pane select-pane \; send -X begin-selection

# Mouse selection bindings that automatically copy via rclip
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel 'rclip'

# Emacs copy mode bindings (for completeness)
bind -T copy-mode 'M-w' send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode 'C-w' send -X copy-pipe-and-cancel 'rclip' 
bind -T copy-mode 'C-k' send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode MouseDrag1Pane select-pane \; send -X begin-selection
bind -T copy-mode DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-and-cancel 'rclip'
bind -T copy-mode TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-and-cancel 'rclip'

# Root table mouse bindings that automatically copy via rclip
# Override default double/triple-click to use rclip explicitly
bind -T root DoubleClick1Pane select-pane \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; send-keys -X copy-pipe-and-cancel 'rclip' }
bind -T root TripleClick1Pane select-pane \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; send-keys -X copy-pipe-and-cancel 'rclip' }

# }}}

# Plugins {{{
# =============================================================================

set -g @tpm-install "M-i"
set -g @tpm-update "M-u"
set -g @tpm-clean "M-x"

# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# set -g @plugin 'graemedavidson/tmux-pane-focus'
# set -g @plugin 'graemedavidson/tmux-pane-focus#tag'
# set -g @pane-focus-size on
# set -g @pane-focus-size '80'
# set -g @pane-focus-direction '+'

# Removed: catppuccin/tmux - replaced with custom status bar

set -g pane-active-border-style 'fg=black,bg=black'
set -g pane-border-style 'fg=black'

# Removed catppuccin_flavour - using custom status colors
# Removed catppuccin_status_background


zoom="#{?window_zoomed_flag, Ôê¢ ,}"
# Status position moved to custom-status.conf

# Removed: tmux-plugins/tmux-cpu - replaced with custom scripts
# Removed: jamesoff/tmux-loadavg - replaced with custom scripts

# All catppuccin configuration removed - using custom status bar


# https://github.com/b0o/tmux-autoreload
# set-option -g @plugin 'b0o/tmux-autoreload'
# set-option -g @tmux-autoreload-configs '$DOTFILES/tmux/tmux.conf'




# https://github.com/christoomey/vim-tmux-navigator
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

bind -n C-h if-shell "$should_forward" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$should_forward" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_forward" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_forward" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$should_forward" "send-keys C-\\" "select-pane -l"

# tmux-resurrect (save & restore sessions, windows, panes)
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-dir "$HOME/.dotfiles/tmux/resurrect"
set -g @resurrect-processes 'ssh vi vim nvim man tail top htop'

# tmux-continuum (auto-save & auto-restore)
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'          # restore last session on tmux start
set -g @continuum-save-interval '15'     # auto-save every 15 minutes

# https://github.com/omerxx/tmux-sessionx?tab=readme-ov-file
set -g @plugin 'omerxx/tmux-sessionx'
set -g @sessionx-bind 'o'
set -g @sessionx-zoxide-mode 'on'

# https://github.com/omerxx/tmux-floax
set -g @plugin 'omerxx/tmux-floax'



# A tmux plugin for opening urls from browser quickly without mouse.
# Doc: https://github.com/wfxr/tmux-fzf-url
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-bind 'u'
set -g @fzf-url-history-limit '2000'
set -g @fzf-url-open 'ropen'

# Doc: https://github.com/tmux-plugins/tmux-prefix-highlight
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Plugin properties
set -g @sidebar-tree 't'
set -g @sidebar-tree-focus 'T'
set -g @sidebar-tree-command 'tree -C'

set -g @open-S 'https://www.google.com/search?q='

# }}}

# Nesting local and remote sessions {{{
# =============================================================================

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' 'source-file ~/.dotfiles/tmux/tmux.remote.conf'

# Enhanced nested session handling with clipboard integration
# See: toggle on/off all keybindings ¬∑ Issue #237 ¬∑ tmux/tmux - https://github.com/tmux/tmux/issues/237

# Toggle nested session mode - disables outer tmux to access inner tmux
bind -T root C-] \
    set prefix none \;\
    set key-table off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    set status-bg colour24 \;\
    refresh-client -S \;\
    display-message "Nested session mode ON - outer tmux disabled"

bind -T off C-] \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-bg \;\
  refresh-client -S \;\
  display-message "Nested session mode OFF - outer tmux enabled"

# Smart copy binding that works everywhere (local, remote, nested sessions)
# rclip handles all environments and falls back to OSC52 when needed
bind -T copy-mode-vi 'C-y' send -X copy-pipe-and-cancel 'rclip'

# }}}

# Plugins Manager {{{
# =============================================================================

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.dotfiles/tmux/plugins/"

if "test ! -d ~/.dotfiles/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.dotfiles/tmux/plugins/tpm && \
      ~/.dotfiles/tmux/plugins/tpm/bin/install_plugins'"

# Run all plugins' scripts
run -b '~/.dotfiles/tmux/plugins/tpm/tpm'

# }}}
